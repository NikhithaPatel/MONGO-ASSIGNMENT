use mongo_practice
db.createCollection("movies")

db.movies.insert({
"title" : "Fight Club",
"writer": "Chuck Palahniuko",
"year"  : 1999,
"actors": [
 "Brad Pitt", "Edward Norton"
]
})

db.movies.insert({
"title" : "Pulp Fiction",
"writer": "Quentin Tarantino",
"year"  : 1994,
"actors": [
 "John Travolta","Uma Thurman"
]
})

db.movies.insert({
"title" : "Inglorious Basterds",
"writer" : "Quentin Tarantino",
"year" : 2009,
"actors" : [
 "Brad Pitt",
 "Diane Kruger",
 "Eli Roth"
]
})

db.movies.insert({
"title" : "The Hobbit: An Unexpected Journey",
"writer" : "J.R.R. Tolkein",
"year" : 2012,
"franchise" : "The Hobbit"
})

db.movies.insert({
"title" : "The Hobbit: The Desolation of Smaug",
"writer": "J.R.R. Tolkein"
})


db.movies.find().pretty()
db.movies.find({"writer":"Quentin Tarantino"}).pretty()
db.movies.find({"franchise" : "The Hobbit"}).pretty()
db.movies.find({"actors":/Brad Pitt/}).pretty()
db.movies.find({$and:[ { year : {$gt:1989}},{ year : {$lt:2000}}]}).pretty()
db.movies.find({$or:[ { year : {$lt:2000}},{ year : {$gt:2010}}]}).pretty()





db.movies.update({title:"The Hobbit: An Unexpected Journey"} , { $set : {synopsis:"A reluctant hobbit,Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."}})
db.movies.update({title:"The Hobbit: The Desolation of Smaug"} , { $set : {synopsis:"The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."}})
db.movies.update({title:"Pulp Fiction"},{$push:{actors:"Samuel L. Jackson"}})

db.movies.find({synopsis:/Bilbo/})
db.movies.find({synopsis:/Gandalf/})
db.movies.find({$and:[{synopsis:/Bilbo/},{synopsis: {$not:/Gandalf/}}]}).pretty()
db.movies.find({$and:[{synopsis:/gold/},{synopsis:/dragon/}]}).pretty()
db.movies.find({$or:[{synopsis:/dwarves/},{synopsis:/hobbit/}]}).pretty()



db.movies.remove({title:"Pee Wee Herman's Big Adventure"})
db.movies.remove({title:"Avatar"})
